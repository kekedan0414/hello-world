【TCP/IP】
TCP是面向连接的，可靠的网络传输协议。
应用程序--TCP层--IP层，网络接口层。
三次握手，四次挥手。
比如我浏览网页，经过web应用到网卡把我的请求发送出去，应用层http协议加一个http头，
到tcp层，加一个tcp协议的头（包含目的端口，源端口），经过IP层加一个IP头（目的IP地址，源IP地址），
在经过接口层，加上帧头mac地址，帧尾（校验和），封装成帧在网线等介质中传输。

【TCP为什么是三次握手，四次分手】
客户端与服务端是全双工通信的。
客户端connect发起请求，服务端listen监听请求。
客户端首先发个sync给服务端，这是第一次握手。
服务端收到后，发个ack确认，同时这这条消息里面加上了自己的sync信号发给客户端。这是第二次握手。
客户端收到ack后，就表示我能给你发，也能收到你的消息，我可以工作了。
对于服务端发过来的sync，客户端需要发个ack信号给服务端，服务端收到ack之后，也就表示我能发消息给你，也能收到你的消息。
这时候两边连接进入established状态，双方的socket可以通信发送数据了。

四次握手：
四次表示双方都各自发了finish信号，并且都收到对方的ack确认信号，一共四次。
这里有个问题，为什么是四次，而不是像握手一样三次，就是说收到对方的finish信号后，把ack确认信号和自己的finish信号合作一条数据发给对方。
是因为三次握手是建立连接，是没有数据传输的，所以可以合作一条。而断开连接的时候，收到对方的finish信号，但可能我还有数据没发送完。
所以不能马上把自己的finish信号发出去，必须等数据传输完成后，再发送finish信号。所以是4次。

【DDOS攻击】
DOS攻击[Denail of service]是一个客户端发送大量请求让服务器瘫痪。但这样很容易被认出并拉黑名单。
因此出现了DDOS攻击，第一个D是distrust分布式。
攻击者模拟出大量的肉鸡来连接服务器，占用服务器的连接资源。导致真正的用户无法获取到连接。

比如三次握手中，不断发送 SYNC 但不发送ack，使服务器进入半连接状态，耗尽服务器资源（有关超时：发送SYN后，
一定时间内没有收到ACK，则会再次发送SYN，之后会按照倍数间隔的模式继续发送6次，63秒后超时）。

防护：方案1：TCP首包丢弃 ，增加防火墙黑名单策略。丢弃首包后，判断超时时间内是否会发送第二次sync，如果不发送，则判断为syn攻击，加入黑名单。
首包丢弃方案对用户体验会略有影响，因为丢弃首包重传会增大业务的响应时间。
      方案2：增加TCP Proxy代理设备，所有客户端能成功和代理设备完成三次握手进入白名单，并且转发数据给服务器，而一定时间内没有正确建立连接的则屏蔽一段时间。




【反射攻击】





【DNS攻击】

滑动窗口：流量控制技术，
-------------------------------------------------------------------------------------------------------------------

【负载均衡】
负载均衡看主要是工作在第几层
二层负载均衡：对外提供虚拟IP，集群中各个节点IP相同，mac不同，负载均衡服务器拿到请求后，改写mac发给集群不同机器。
三层负载均衡：对外提供虚拟IP，集群中各个节点ip不同。负载均衡器拿到请求后，根据负载均衡算法把请求发给集群中不同机器。
四层负载均衡：工作在传输层，改写目标IP地址，端口，将请求发给集群中应用服务器。
    所谓四层负载均衡，也就是主要通过报文中的目标地址和端口，再加上负载均衡设备设置的服务器选择方式，决定最终选择的内部服务器。
    以常见的TCP为例，负载均衡设备在接收到第一个来自客户端的SYN 请求时，即通过上述方式选择一个最佳的服务器，
    并对报文中目标IP地址进行修改(改为后端服务器IP），直接转发给该服务器。TCP的连接建立，即三次握手是客户端和服务器直接建立的，
    负载均衡设备只是起到一个类似路由器的转发动作。在某些部署情况下，为保证服务器回包可以正确返回给负载均衡设备，
    在转发报文的同时可能还会对报文原来的源地址进行修改。

七层负载均衡：工作在应用层，比如可以根据具体的应用协议，比如http协议，将某些内容指定发给集群不同机器。它需要关注数据内容是啥，依据内容进行转发。

总的来说，一般是lvs做4层负载；nginx做7层负载；haproxy比较灵活，4层和7层负载均衡都能做

算法：轮询，随机，加权，最小压力等等。
https://blog.csdn.net/qq32933432/article/details/72547357
https://www.cnblogs.com/kevingrace/p/6137881.html
https://www.zhihu.com/question/20553431/answer/130698230
-------------------------------------------------------------------------------------------------------------------
【安全加固Selinux】
有三个账户，root管理员：管理软件安装启动，比如创建普通账号，安装软件，启动某些服务。
            安全管理员：负责安全属性的设置，
            审计管理员：查看，审查所有的日志信息
好处就是安全性非常高，三个账户相互制约。但使用起来也是非常的头疼，比如我要安装一个软件，软件包需要安全账户进行审核放行，root管理员才能安装，我要启动服务，也需要安全管理员开放端口，出了问题查看日志又需要审计账户，尤其是在上面开发，更困难。
原理：我们访问者访问任何linux资源，这些访问请求都会经过selinux的服务。然后selinux维护了一个策略数据库，谁能访问哪些资源都写在策略里，符合就放行，不符合就拒绝并记录审计日志。