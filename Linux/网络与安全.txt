TCPIP，4层
应用程序--TCP层--IP层，网络接口层。
三次握手，四次挥手。
比如我浏览网页，经过web应用到网卡把我的请求发送出去，应用层http协议加一个http头，
到tcp层，加一个tcp协议的头（包含目的端口，源端口），经过IP层加一个IP头（目的IP地址，源IP地址），
在经过接口层，加上帧头mac地址，帧尾（校验和），封装成帧在网线等介质中传输。

滑动窗口：流量控制技术，
-------------------------------------------------------------------------------------------------------------------

【负载均衡】
负载均衡看主要是工作在第几层
二层负载均衡：对外提供虚拟IP，集群IP都相同，mac不同，负载均衡服务器拿到请求后，改写mac发给集群不同机器。
三层负载均衡：对外提供虚拟IP，集群中ip不同。负载均衡器拿到请求后，根据负载均衡算法把请求发给集群中不同机器。
四层负载均衡：工作在传输层，改写目标IP地址，端口，将请求发给集群中应用服务器。
七层负载均衡：工作在应用层，比如可以根据具体的应用协议，比如http协议，将某些内容指定发给集群不同机器。它需要关注数据内容是啥，依据内容进行转发。

总的来说，一般是lvs做4层负载；nginx做7层负载；haproxy比较灵活，4层和7层负载均衡都能做

算法：轮询，随机，加权，最小压力等等。
-------------------------------------------------------------------------------------------------------------------
【安全加固Selinux】
有三个账户，root管理员：管理软件安装启动，比如创建普通账号，安装软件，启动某些服务。
            安全管理员：负责安全属性的设置，
            审计管理员：查看，审查所有的日志信息
好处就是安全性非常高，三个账户相互制约。但使用起来也是非常的头疼，比如我要安装一个软件，软件包需要安全账户进行审核放行，root管理员才能安装，我要启动服务，也需要安全管理员开放端口，出了问题查看日志又需要审计账户，尤其是在上面开发，更困难。
原理：我们访问者访问任何linux资源，这些访问请求都会经过selinux的服务。然后selinux维护了一个策略数据库，谁能访问哪些资源都写在策略里，符合就放行，不符合就拒绝并记录审计日志。